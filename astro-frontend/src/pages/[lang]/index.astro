---
import Layout from "../../layouts/Layout.astro";
import { useTranslations } from "../../i18n/utils";
import data from "../../data/news_items.json";

const { lang } = Astro.params;

const t = useTranslations(lang);

const programs = [...new Set(data.map((item) => item.program))];

const filters = Object.fromEntries(Astro.url.searchParams);
---

<Layout title={t("title")}>
  <main class="grow bg-gray-100 px-2 py-10">
    <div class="max-w-7xl mx-auto">
      <div class="flex">
        <!-- Desktop Filter -->
        <div class="hidden sm:block pt-32 pr-6">
          <h2 class="font-semibold text-gray-600 mb-2">
            Filter News by Benefit
          </h2>
          <form id="filtersDesktop" class="flex flex-col items-start gap-4">
            {
              programs.map((filter) => (
                <label class="flex gap-2 text-sm font-semibold text-gray-900">
                  <input
                    type="checkbox"
                    name={filter.split(" ").join("_")}
                    id={filter + "desktop"}
                    checked={filters[filter.split(" ").join("_")] === "on"}
                  />
                  {filter}
                </label>
              ))
            }
            <div class="flex gap-2">
              <button
                class="font-semibold text-gray-600 outline outline-1 focus-visible:ring p-1 text-sm rounded-sm hover:text-gray-900"
              >
                submit
              </button>
              <button
                id="resetBtnDesktop"
                class="font-semibold text-gray-600 outline outline-1 focus-visible:ring p-1 text-sm rounded-sm hover:text-gray-900"
              >
                reset
              </button>
            </div>
          </form>
        </div>

        <div class="grow">
          <h1 class="text-4xl font-[500] mb-6">Benefits News Updates</h1>

          <!-- Mobile Filter -->
          <div class="block sm:hidden mb-5">
            <h2 class="font-semibold text-gray-600 mb-2">
              Filter News by Benefit
            </h2>
            <form id="filtersMobile" class="flex flex-col items-start gap-4">
              {
                programs.map((filter) => (
                  <label class="flex gap-2 text-sm font-semibold text-gray-900">
                    <input
                      type="checkbox"
                      name={filter}
                      id={filter + "mobile"}
                      checked={filters[filter] == "on"}
                    />
                    {filter}
                  </label>
                ))
              }
              <div class="flex gap-2">
                <button
                  class="font-semibold text-gray-600 outline outline-1 focus-visible:ring p-1 text-sm rounded-sm hover:text-gray-900"
                >
                  submit
                </button>
                <button
                  id="resetBtnMobile"
                  class="font-semibold text-gray-600 outline outline-1 focus-visible:ring p-1 text-sm rounded-sm hover:text-gray-900"
                >
                  reset
                </button>
              </div>
            </form>
          </div>

          <!-- Desktop search (needed because of unique ID constraint on form attribute) -->
          <div class="hidden sm:flex mb-5">
            <label class="sr-only">search news articles</label>
            <input
              form="filtersDesktop"
              name="search"
              class="p-2 grow"
              type="text"
              placeholder="search by benefit name or source"
              value={filters.search}
            />
            <button
              form="filtersDesktop"
              class="bg-primary text-white p-2 no-wrap hover:bg-white hover:text-primary"
              >Search Benefit</button
            >
          </div>

          <div class="flex mb-5 sm:hidden">
            <label class="sr-only">search news articles</label>
            <input
              form="filtersMobile"
              name="search"
              class="p-2 grow"
              type="text"
              placeholder="search by benefit name or source"
              value={filters.search}
            />
            <button
              form="filtersMobile"
              class="bg-primary text-white p-2 no-wrap hover:bg-white hover:text-primary"
              >Search Benefit</button
            >
          </div>

          <div class="bg-white divide-y px-2 md:px-10 py-5 space-y-4">
            {
              data.map((item) => (
                <div class="py-4 space-y-2">
                  <div class="space-x-2">
                    <span class="text-gray-500 text-sm">
                      <span>{item.program}</span> | <span>{item.date}</span>
                    </span>
                    <span
                      class={`${
                        item.tag === "NEW" ? "bg-green-500" : "bg-orange-500"
                      } text-white px-2 py-0.5 font-semibold text-xs inline-block`}
                    >
                      {item.tag}
                    </span>
                  </div>
                  <h2 class="text-2xl font-semibold">
                    {lang === "en" ? item.en_title : item.fr_title}
                  </h2>
                  <p>{lang === "en" ? item.en_body : item.fr_body}</p>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  // reset form data and resubmit to page to remove query string and fetch clean data
  const formDesktop = document.querySelector("#filtersDesktop") as HTMLFormElement;
  const resetBtnDesktop = document.querySelector("#resetBtnDesktop");
  resetBtnDesktop.addEventListener("click", (e) => {
    e.preventDefault();
    formDesktop.reset();
    window.location.href = window.location.origin + window.location.pathname;
  });

  const formMobile = document.querySelector(
    "#filtersMobile"
  ) as HTMLFormElement;
  const resetBtnMobile = document.querySelector("#resetBtnMobile");
  resetBtnMobile.addEventListener("click", (e) => {
    e.preventDefault();
    formMobile.reset();
    window.location.href = window.location.origin + window.location.pathname;
  });
</script>
